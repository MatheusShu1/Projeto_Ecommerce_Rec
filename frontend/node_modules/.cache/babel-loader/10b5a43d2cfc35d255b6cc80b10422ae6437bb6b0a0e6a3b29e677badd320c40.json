{"ast":null,"code":"import axios from 'axios';\nimport { ALL_PRODUCTS_REQUEST, ALL_PRODUCTS_SUCESS, ALL_PRODUCTS_FAIL, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, CLEAR_ERRORS, NEW_REVIEW_FAIL, NEW_REVIEW_REQUEST, NEW_REVIEW_RESET, NEW_REVIEW_SUCCESS, ADMIN_PRODUCTS_REQUEST, ADMIN_PRODUCTS_SUCESS, ADMIN_PRODUCTS_FAIL } from '../constants/productConstants';\n\n// export const getProducts = () => async (dispatch) => {\n\nexport const getProducts = (keyword = '', currentPage = 1, price, category) => async dispatch => {\n  try {\n    dispatch({\n      type: ALL_PRODUCTS_REQUEST\n    });\n    console.log('keyword:', keyword);\n    let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}`;\n    if (category) {\n      link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&category=${category}`;\n    }\n    const {\n      data\n    } = await axios.get(link);\n    dispatch({\n      type: ALL_PRODUCTS_SUCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ALL_PRODUCTS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const getProductsDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/product/${id}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.error('Error fetching product details:', error);\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n// New Review\nexport const newReview = reviewData => async dispatch => {\n  try {\n    dispatch({\n      type: NEW_REVIEW_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/v1/review`, reviewData, config);\n    dispatch({\n      type: NEW_REVIEW_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: NEW_REVIEW_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// Get Admin Products\nexport const getAdminProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: ADMIN_PRODUCTS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/admin/products`);\n    dispatch({\n      type: ADMIN_PRODUCTS_SUCESS,\n      payload: data.products\n    });\n  } catch (error) {\n    dispatch({\n      type: ADMIN_PRODUCTS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// Clear Errors\n\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"names":["axios","ALL_PRODUCTS_REQUEST","ALL_PRODUCTS_SUCESS","ALL_PRODUCTS_FAIL","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","CLEAR_ERRORS","NEW_REVIEW_FAIL","NEW_REVIEW_REQUEST","NEW_REVIEW_RESET","NEW_REVIEW_SUCCESS","ADMIN_PRODUCTS_REQUEST","ADMIN_PRODUCTS_SUCESS","ADMIN_PRODUCTS_FAIL","getProducts","keyword","currentPage","price","category","dispatch","type","console","log","link","data","get","payload","error","response","message","getProductsDetails","id","newReview","reviewData","config","headers","put","success","getAdminProducts","products","clearErrors"],"sources":["/app/frontend/src/actions/productActions.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nimport {\r\n    ALL_PRODUCTS_REQUEST,\r\n    ALL_PRODUCTS_SUCESS,\r\n    ALL_PRODUCTS_FAIL,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    CLEAR_ERRORS,\r\n    NEW_REVIEW_FAIL,\r\n    NEW_REVIEW_REQUEST,\r\n    NEW_REVIEW_RESET,\r\n    NEW_REVIEW_SUCCESS,\r\n    ADMIN_PRODUCTS_REQUEST,\r\n    ADMIN_PRODUCTS_SUCESS,\r\n    ADMIN_PRODUCTS_FAIL\r\n\r\n\r\n} from '../constants/productConstants';\r\n\r\n// export const getProducts = () => async (dispatch) => {\r\n\r\nexport const getProducts = (keyword = '', currentPage = 1, price, category) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: ALL_PRODUCTS_REQUEST });\r\n        console.log('keyword:', keyword);\r\n        let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}`;\r\n        if (category) {\r\n            link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&category=${category}`;\r\n        }\r\n        const { data } = await axios.get(link);\r\n\r\n        dispatch({\r\n            type: ALL_PRODUCTS_SUCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALL_PRODUCTS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getProductsDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/v1/product/${id}`);\r\n\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n    } catch (error) {\r\n        console.error('Error fetching product details:', error);\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n        });\r\n    }\r\n};\r\n\r\n// New Review\r\nexport const newReview = (reviewData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: NEW_REVIEW_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/v1/review`, reviewData, config)\r\n\r\n        dispatch({\r\n            type: NEW_REVIEW_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEW_REVIEW_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Get Admin Products\r\nexport const getAdminProducts = () => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: ADMIN_PRODUCTS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/v1/admin/products`)\r\n\r\n        dispatch({\r\n            type: ADMIN_PRODUCTS_SUCESS,\r\n            payload: data.products\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ADMIN_PRODUCTS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Clear Errors\r\n\r\nexport const clearErrors = () => async (dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_ERRORS\r\n    })\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}