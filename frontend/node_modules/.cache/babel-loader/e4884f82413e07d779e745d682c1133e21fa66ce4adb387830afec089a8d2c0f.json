{"ast":null,"code":"import { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAIL, CLEAR_ERRORS, REGISTER_USER_FAIL, REGISTER_USER_REQUEST, REGISTER_USER_SUCESS, LOAD_USER_SUCCESS, LOAD_USER_FAIL, LOAD_USER_REQUEST, LOGOUT_SUCCESS, LOGOUT_FAIL, UPDATE_PASSWORD_REQUEST, UPDATE_PASSWORD_SUCCESS, UPDATE_PASSWORD_FAIL, UPDATE_PASSWORD_RESET, UPDATE_PROFILE_FAIL, UPDATE_PROFILE_REQUEST, UPDATE_PROFILE_SUCCESS, UPDATE_PROFILE_RESET, FORGOT_PASSWORD_FAIL, FORGOT_PASSWORD_REQUEST, FORGOT_PASSWORD_SUCCESS, NEW_PASSWORD_FAIL, NEW_PASSWORD_REQUEST, NEW_PASSWORD_SUCCESS } from \"../constants/userConstants\";\nexport const authReducer = (state = {\n  user: {}\n}, action) => {\n  switch (action.type) {\n    case LOGIN_REQUEST:\n    case REGISTER_USER_REQUEST:\n    case LOAD_USER_REQUEST:\n      return {\n        loading: true,\n        isAuthenticated: false\n      };\n    case LOGIN_SUCCESS:\n    case REGISTER_USER_SUCESS:\n    case LOAD_USER_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        isAuthenticated: true,\n        user: action.payload\n      };\n    case LOGOUT_SUCCESS:\n      return {\n        loading: false,\n        isAuthenticated: false,\n        user: null\n      };\n    case LOAD_USER_FAIL:\n      return {\n        loading: false,\n        isAuthenticated: false,\n        user: null,\n        error: action.payload\n      };\n    case LOGOUT_FAIL:\n      return {\n        ...state,\n        error: action.payload\n      };\n    case LOGIN_FAIL:\n    case REGISTER_USER_FAIL:\n      return {\n        ...state,\n        loading: false,\n        isAuthenticated: false,\n        user: null,\n        error: action.payload\n      };\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\nexport const userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case UPDATE_PROFILE_REQUEST:\n    case UPDATE_PASSWORD_REQUEST:\n      return {\n        ...state,\n        loading: true\n      };\n    case UPDATE_PROFILE_SUCCESS:\n    case UPDATE_PASSWORD_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        isUpdated: action.payload\n      };\n    case UPDATE_PROFILE_RESET:\n    case UPDATE_PASSWORD_RESET:\n      return {\n        ...state,\n        isUpdated: false\n      };\n    case UPDATE_PROFILE_FAIL:\n    case UPDATE_PASSWORD_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\nexport const forgotPasswordRecucer = (state = {}, action) => {\n  switch (action.type) {\n    case FORGOT_PASSWORD_REQUEST:\n    case NEW_PASSWORD_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case FORGOT_PASSWORD_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        message: action.payload\n      };\n    case NEW_PASSWORD_SUCCESS:\n      return {\n        ...state,\n        success: action.payload\n      };\n    case FORGOT_PASSWORD_FAIL:\n    case NEW_PASSWORD_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAIL","CLEAR_ERRORS","REGISTER_USER_FAIL","REGISTER_USER_REQUEST","REGISTER_USER_SUCESS","LOAD_USER_SUCCESS","LOAD_USER_FAIL","LOAD_USER_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAIL","UPDATE_PASSWORD_REQUEST","UPDATE_PASSWORD_SUCCESS","UPDATE_PASSWORD_FAIL","UPDATE_PASSWORD_RESET","UPDATE_PROFILE_FAIL","UPDATE_PROFILE_REQUEST","UPDATE_PROFILE_SUCCESS","UPDATE_PROFILE_RESET","FORGOT_PASSWORD_FAIL","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_SUCCESS","NEW_PASSWORD_FAIL","NEW_PASSWORD_REQUEST","NEW_PASSWORD_SUCCESS","authReducer","state","user","action","type","loading","isAuthenticated","payload","error","userReducer","isUpdated","forgotPasswordRecucer","message","success"],"sources":["C:/Users/Matheus/Documents/GitHub/Projeto_Ecommerce_Rec/frontend/src/reducers/userReducers.js"],"sourcesContent":["import {\r\n    LOGIN_REQUEST,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    CLEAR_ERRORS,\r\n    REGISTER_USER_FAIL,\r\n    REGISTER_USER_REQUEST,\r\n    REGISTER_USER_SUCESS,\r\n    LOAD_USER_SUCCESS,\r\n    LOAD_USER_FAIL,\r\n    LOAD_USER_REQUEST,\r\n    LOGOUT_SUCCESS,\r\n    LOGOUT_FAIL,\r\n    UPDATE_PASSWORD_REQUEST,\r\n    UPDATE_PASSWORD_SUCCESS,\r\n    UPDATE_PASSWORD_FAIL,\r\n    UPDATE_PASSWORD_RESET,\r\n    UPDATE_PROFILE_FAIL,\r\n    UPDATE_PROFILE_REQUEST,\r\n    UPDATE_PROFILE_SUCCESS,\r\n    UPDATE_PROFILE_RESET,\r\n    FORGOT_PASSWORD_FAIL,\r\n    FORGOT_PASSWORD_REQUEST,\r\n    FORGOT_PASSWORD_SUCCESS,\r\n    NEW_PASSWORD_FAIL,\r\n    NEW_PASSWORD_REQUEST,\r\n    NEW_PASSWORD_SUCCESS\r\n\r\n} from \"../constants/userConstants\"\r\n\r\nexport const authReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case LOGIN_REQUEST:\r\n        case REGISTER_USER_REQUEST:\r\n        case LOAD_USER_REQUEST:\r\n            return {\r\n                loading: true,\r\n                isAuthenticated: false\r\n            }\r\n        case LOGIN_SUCCESS:\r\n        case REGISTER_USER_SUCESS:\r\n        case LOAD_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isAuthenticated: true,\r\n                user: action.payload\r\n            }\r\n        case LOGOUT_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                isAuthenticated: false,\r\n                user: null\r\n            }\r\n        case LOAD_USER_FAIL:\r\n            return {\r\n                loading: false,\r\n                isAuthenticated: false,\r\n                user: null,\r\n                error: action.payload\r\n            }\r\n        case LOGOUT_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n\r\n        case LOGIN_FAIL:\r\n        case REGISTER_USER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isAuthenticated: false,\r\n                user: null,\r\n                error: action.payload\r\n            }\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_PROFILE_REQUEST:\r\n        case UPDATE_PASSWORD_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case UPDATE_PROFILE_SUCCESS:\r\n        case UPDATE_PASSWORD_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isUpdated: action.payload\r\n            }\r\n        case UPDATE_PROFILE_RESET:\r\n        case UPDATE_PASSWORD_RESET:\r\n            return {\r\n                ...state,\r\n                isUpdated: false\r\n            }\r\n        case UPDATE_PROFILE_FAIL:\r\n        case UPDATE_PASSWORD_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const forgotPasswordRecucer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case FORGOT_PASSWORD_REQUEST:\r\n        case NEW_PASSWORD_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: null\r\n            }\r\n        case FORGOT_PASSWORD_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                message: action.payload\r\n            }\r\n        case NEW_PASSWORD_SUCCESS:\r\n            return {\r\n                ...state,\r\n                success: action.payload\r\n            }\r\n        case FORGOT_PASSWORD_FAIL:\r\n        case NEW_PASSWORD_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}